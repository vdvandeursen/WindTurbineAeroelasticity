Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from structural_model import StructuralModel\r\nfrom bem import BEM\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nif __name__ == '__main__':\r\n    v0 = np.array([3, 4, 5, 6, 7, 8, 9, 10, 11, 11.4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25])\r\n    rotational_frequancies = np.array(\r\n        [5.7173, 6.9957, 7.470993355, 7.887136213, 8.396777409, 9.014936877, 10.14196013, 11.27405316, 11.85744186,\r\n         12.1, 12.10207641, 12.10166113, 12.10111296, 12.10069767, 12.10004983, 12.09983389, 12.09961794, 12.09928571,\r\n         12.09950166, 12.09960133, 12.09965116, 12.09975083, 12.09945183, 12.09956811])\r\n\r\n    rotational_frequancies = rotational_frequancies / 60 * 2 * np.pi\r\n\r\n    pitch_angles = np.array(\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.83, 6.6, 8.7, 10.45, 12.06, 13.54, 14.92, 16.23, 17.47, 18.68, 19.85, 21.02,\r\n         22.12, 23.15])\r\n\r\n    structural_model = StructuralModel(filepath='structural_data.csv')\r\n\r\n    print(f'Nat freqs: {structural_model.natural_frequencies}')\r\n\r\n    labels = ['Flapwise displacement', 'Edgewise displacement', 'Flapwise velocity', 'Edgewise velocity']\r\n    colors = ['b','r','g','y']\r\n    plt.figure()\r\n    flap_dis = []\r\n    edge_dis = []\r\n    timestamps = np.linspace(0, 400, 1000)\r\n    N = len(timestamps)\r\n    T = timestamps[1] - timestamps[0]\r\n    frequencies = np.fft.fftfreq(N, T)\r\n    initial_conditions = np.array([0,0,0,0])\r\n\r\n    #Static displacement for varyind wind speed 3-25 m/s\r\n    for v, omega, pitch in zip(v0, rotational_frequancies, pitch_angles):\r\n        res, Mn, FF, FE = structural_model.calculate_time_response_static_load(timestamps,initial_conditions,v,omega,pitch)\r\n        flap_dis.append(res.y[0,-1])\r\n        edge_dis.append(res.y[1,-1])\r\n    plt.plot(v0,flap_dis,label=\"Flapwise Displacement at the tip\",color=colors[0])\r\n    plt.plot(v0,edge_dis,label=\"Edgewise Displacement at the tip\",color=colors[1])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Wind Speed [m/s]\")\r\n    plt.ylabel(\"Displacement [m]\")\r\n    plt.show()\r\n\r\n    #Constant velocity of 15 m/s without taking into account the blade velocity\r\n    res, Mn, FF, FE = structural_model.calculate_time_response_static_load(timestamps, initial_conditions, v0[13],rotational_frequancies[13],pitch_angles[13])\r\n    #Plotting Displacement and velocities\r\n    for i in [2,0]:\r\n        plt.plot(res.t, res.y[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    for i in [3,1]:\r\n        plt.plot(res.t, res.y[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    #Constant velocity of 15 m/s with taking into account the blade velocity\r\n    res, Mn_lst, FF_lst, FE_lst= structural_model.calculate_time_response_dynamic_load(timestamps,initial_conditions,v0[13],rotational_frequancies[13],pitch_angles[13],periodic=\"False\",blade_velocities=\"True\")\r\n    #Time Plot velocities and displacement\r\n    for i in [2,0]:\r\n        plt.plot(timestamps, res[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    for i in [3,1]:\r\n        plt.plot(timestamps, res[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    #Time plot Forces and Moments\r\n    plt.plot(timestamps[1:],FF_lst, label = \"Flapwise Force at the tip [N]\")\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Force [N]\")\r\n    plt.show()\r\n\r\n    plt.plot(timestamps[1:],FE_lst, label = \"Edgewise Force at the tip [N]\")\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Force [N]\")\r\n    plt.show()\r\n\r\n    plt.plot(timestamps[1:],Mn_lst, label = \"Root Bending Moment [N m]\")\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Moment [Nm m]\")\r\n    plt.show()\r\n\r\n    #Frequency Plot\r\n    for i in range(2):\r\n        fft_values = np.fft.fft(res[i, :])\r\n        magnitude = np.abs(fft_values)\r\n        plt.plot(frequencies[0:N//2-1], 2*magnitude[0:N//2-1], label=f'{labels[i]}')\r\n    plt.yscale('log')\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Frequency [Hz]\")\r\n    plt.ylabel(\"Magnitude\")\r\n    plt.show()\r\n\r\n\r\n    #Varying velocity around 15 m/s without taking into account the blade velocity\r\n    res, Mn_lst, FF_lst, FE_lst = structural_model.calculate_time_response_dynamic_load(timestamps,initial_conditions,v0[13],rotational_frequancies[13],pitch_angles[13],periodic=\"True\",blade_velocities=\"False\")\r\n    #Time Plot velocities and displacemen\r\n    for i in [2,0]:\r\n        plt.plot(timestamps, res[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    for i in [3,1]:\r\n        plt.plot(timestamps, res[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n\r\n    #Varying velocity around 15 m/s with taking into account the blade velocity\r\n    res, Mn_lst, FF_lst, FE_lst = structural_model.calculate_time_response_dynamic_load(timestamps,initial_conditions,v0[13],rotational_frequancies[13],pitch_angles[13],periodic=\"True\",blade_velocities=\"True\")\r\n    #Time Plot\r\n    for i in [0,2]:\r\n        plt.plot(timestamps, res[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    for i in [1,3]:\r\n        plt.plot(timestamps, res[i, :], label=f'{labels[i]}',color=colors[i])\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Tip displacement & Velocity [m] / [m/s]\")\r\n    plt.show()\r\n\r\n    # Time plot Forces and Moments\r\n    plt.plot(timestamps[1:], FF_lst, label=\"Flapwise Force at the tip [N]\")\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Force [N]\")\r\n    plt.show()\r\n\r\n    plt.plot(timestamps[1:], FE_lst, label=\"Edgewise Force at the tip [N]\")\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Force [N]\")\r\n    plt.show()\r\n\r\n    plt.plot(timestamps[1:], Mn_lst, label=\"Root Bending Moment [N m]\")\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Time [s]\")\r\n    plt.ylabel(\"Moment [Nm m]\")\r\n    plt.show()\r\n\r\n    #Frequency Plot\r\n    for i in range(2):\r\n        fft_values = np.fft.fft(res[i, :])\r\n        magnitude = np.abs(fft_values)\r\n        plt.plot(frequencies[0:N//2-1], 2*magnitude[0:N//2-1], label=f'{labels[i]}')\r\n    plt.yscale('log')\r\n    plt.legend()\r\n    plt.grid()\r\n    plt.xlabel(\"Frequency [Hz]\")\r\n    plt.ylabel(\"Magnitude\")\r\n    plt.show()\r\n
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	
@@ -36,9 +36,10 @@
         res, Mn, FF, FE = structural_model.calculate_time_response_static_load(timestamps,initial_conditions,v,omega,pitch)
         flap_dis.append(res.y[0,-1])
         edge_dis.append(res.y[1,-1])
-    plt.plot(v0,flap_dis,label="Flapwise Displacement at the tip",color=colors[0])
-    plt.plot(v0,edge_dis,label="Edgewise Displacement at the tip",color=colors[1])
+    plt.plot(v0,flap_dis,label=f'{labels[0]}',color=colors[0])
+    plt.plot(v0,edge_dis,label=f'{labels[1]}',color=colors[1])
     plt.legend()
+    plt.title("Static displacement blade tip for varying wind speeds")
     plt.grid()
     plt.xlabel("Wind Speed [m/s]")
     plt.ylabel("Displacement [m]")
@@ -59,6 +60,7 @@
         plt.plot(res.t, res.y[i, :], label=f'{labels[i]}',color=colors[i])
     plt.legend()
     plt.grid()
+    plt.title("Test")
     plt.xlabel("Time [s]")
     plt.ylabel("Tip displacement & Velocity [m] / [m/s]")
     plt.show()
